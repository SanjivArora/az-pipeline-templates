parameters:
- name: compliance
  type: string
  default: 'enabled'  
- name: env
  type: string
- name: workingDirectory
  type: string
- name: adoServiceConnectionName
  type: string
- name: backendAzureRmResourceGroupName
  type: string
- name: backendAzureRmStorageAccountName
  type: string
- name: backendAzureRmContainerName
  type: string
- name: backendAzureRmKey
  type: string
- name: tfvarsFileName
  type: string
- name: networkZone
  type: string

stages:
  - stage: plan-destroy
    displayName: "Plan and Generate Artifact"
    jobs:
      - job: plan-destroy 
        displayName: Plan-destroy
        steps:
          - template: tasks/terraform-tasks-destroy-plan.yaml
            parameters:
              workingDirectory: '${{ parameters.workingDirectory }}'
              adoServiceConnectionName: '${{ parameters.adoServiceConnectionName }}'
              backendAzureRmResourceGroupName: '${{ parameters.backendAzureRmResourceGroupName }}'
              backendAzureRmStorageAccountName: '${{ parameters.backendAzureRmStorageAccountName }}'
              backendAzureRmContainerName: '${{ parameters.backendAzureRmContainerName }}'
              backendAzureRmKey: '${{ parameters.backendAzureRmKey }}'
              tfvarsFileName: '${{ parameters.tfvarsFileName }}'

  - stage: destroy
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn: 
      - plan-destroy
    displayName: Destroy
    jobs:
      - deployment: destroy
        environment: $(System.TeamProject)-${{ parameters.env }}
        strategy:
          runOnce:
            deploy:
              steps:
                - template: tasks/terraform-tasks-destroy.yaml
                  parameters:
                    workingDirectory: '${{ parameters.workingDirectory }}'
                    adoServiceConnectionName: '${{ parameters.adoServiceConnectionName }}'
                    backendAzureRmResourceGroupName: '${{ parameters.backendAzureRmResourceGroupName }}'
                    backendAzureRmStorageAccountName: '${{ parameters.backendAzureRmStorageAccountName }}'
                    backendAzureRmContainerName: '${{ parameters.backendAzureRmContainerName }}'
                    backendAzureRmKey: '${{ parameters.backendAzureRmKey }}'
                    tfvarsFileName: '${{ parameters.tfvarsFileName }}'

